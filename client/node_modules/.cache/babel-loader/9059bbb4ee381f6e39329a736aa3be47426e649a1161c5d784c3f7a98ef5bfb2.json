{"ast":null,"code":"var _jsxFileName = \"/home/qadhar/pizzas/client/src/Components/PizzaForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useMyContext } from \"../MyContext\"; // Import the context hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPizzaForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    price: 0,\n    pizza_id: 0,\n    restaurant_id: 0\n  });\n  const {\n    setPizzas\n  } = useMyContext(); // Access setPizzas from the context\n\n  const handleInputChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    // Send a POST request to create a new RestaurantPizza with formData\n    fetch(\"/restaurant_pizzas\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(response => response.json()).then(data => {\n      // Handle success or validation errors\n      if (data.errors) {\n        console.error(data.errors);\n      } else {\n        console.log(\"Pizza created:\", data);\n        setPizzas(data); // Use setPizzas from context to update the data\n        // Reset the form or navigate to a success page\n      }\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Pizza to Restaurant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Pizza\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPizzaForm, \"eIbBWniNaqIkaWR/IS2UP6zEqZ4=\", false, function () {\n  return [useMyContext];\n});\n_c = AddPizzaForm;\nexport default AddPizzaForm;\nvar _c;\n$RefreshReg$(_c, \"AddPizzaForm\");","map":{"version":3,"names":["React","useState","useMyContext","jsxDEV","_jsxDEV","AddPizzaForm","_s","formData","setFormData","price","pizza_id","restaurant_id","setPizzas","handleInputChange","event","name","value","target","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","errors","console","error","log","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/qadhar/pizzas/client/src/Components/PizzaForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useMyContext } from \"../MyContext\"; // Import the context hook\n\nfunction AddPizzaForm() {\n  const [formData, setFormData] = useState({\n    price: 0,\n    pizza_id: 0,\n    restaurant_id: 0,\n  });\n\n  const { setPizzas } = useMyContext(); // Access setPizzas from the context\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // Send a POST request to create a new RestaurantPizza with formData\n    fetch(\"/restaurant_pizzas\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(formData),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Handle success or validation errors\n        if (data.errors) {\n          console.error(data.errors);\n        } else {\n          console.log(\"Pizza created:\", data);\n          setPizzas(data); // Use setPizzas from context to update the data\n          // Reset the form or navigate to a success page\n        }\n      })\n      .catch((error) => console.error(error));\n  };\n\n  return (\n    <div>\n      <h2>Add Pizza to Restaurant</h2>\n      <form onSubmit={handleSubmit}>\n        {/* Form fields */}\n        <div>\n          <button type=\"submit\">Add Pizza</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default AddPizzaForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,KAAK,EAAE,CAAC;IACRC,QAAQ,EAAE,CAAC;IACXC,aAAa,EAAE;EACjB,CAAC,CAAC;EAEF,MAAM;IAAEC;EAAU,CAAC,GAAGV,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEtC,MAAMW,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCT,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACQ,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAIJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,CAAC,CAAC;IACtB;IACAC,KAAK,CAAC,oBAAoB,EAAE;MAC1BC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;IAC/B,CAAC,CAAC,CACCmB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACA,IAAIA,IAAI,CAACC,MAAM,EAAE;QACfC,OAAO,CAACC,KAAK,CAACH,IAAI,CAACC,MAAM,CAAC;MAC5B,CAAC,MAAM;QACLC,OAAO,CAACE,GAAG,CAAC,gBAAgB,EAAEJ,IAAI,CAAC;QACnCjB,SAAS,CAACiB,IAAI,CAAC,CAAC,CAAC;QACjB;MACF;IACF,CAAC,CAAC,CACDK,KAAK,CAAEF,KAAK,IAAKD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,oBACE5B,OAAA;IAAA+B,QAAA,gBACE/B,OAAA;MAAA+B,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCnC,OAAA;MAAMoC,QAAQ,EAAEtB,YAAa;MAAAiB,QAAA,eAE3B/B,OAAA;QAAA+B,QAAA,eACE/B,OAAA;UAAQqC,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjC,EAAA,CApDQD,YAAY;EAAA,QAOGH,YAAY;AAAA;AAAAwC,EAAA,GAP3BrC,YAAY;AAsDrB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}