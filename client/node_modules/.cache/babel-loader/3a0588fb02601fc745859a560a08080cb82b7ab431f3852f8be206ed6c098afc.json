{"ast":null,"code":"var _jsxFileName = \"/home/qadhar/pizzas/src/Components/Restaurant.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useMyContext } from \"../MyContext\"; // Import the context hook\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RestaurantDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    setRestaurant\n  } = useMyContext(); // Access setRestaurant from the context\n  const {\n    restaurant: selectedRestaurant\n  } = useMyContext();\n  useEffect(() => {\n    // Fetch restaurant details by ID from  API\n    fetch(`/restaurants/${id}`).then(response => {\n      if (response.status === 404) {\n        throw new Error(\"Restaurant not found\");\n      }\n      return response.json();\n    }).then(data => setRestaurant(data)) // Use setRestaurant from context to update the data\n    .catch(error => console.error(error));\n  }, [id]);\n  if (!selectedRestaurant) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedRestaurant.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selectedRestaurant.address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Pizzas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: selectedRestaurant.pizzas.map(pizza => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [pizza.name, \" - \", pizza.ingredients]\n      }, pizza.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(RestaurantDetails, \"lQIf5Q76KlS6zkY7BqVHj66HE9w=\", false, function () {\n  return [useParams, useMyContext, useMyContext];\n});\n_c = RestaurantDetails;\nexport default RestaurantDetails;\nvar _c;\n$RefreshReg$(_c, \"RestaurantDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useMyContext","jsxDEV","_jsxDEV","RestaurantDetails","_s","id","setRestaurant","restaurant","selectedRestaurant","fetch","then","response","status","Error","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","name","address","pizzas","map","pizza","ingredients","_c","$RefreshReg$"],"sources":["/home/qadhar/pizzas/src/Components/Restaurant.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useMyContext } from \"../MyContext\"; // Import the context hook\n\nfunction RestaurantDetails() {\n  const { id } = useParams();\n  const { setRestaurant } = useMyContext(); // Access setRestaurant from the context\n  const { restaurant: selectedRestaurant } = useMyContext();\n\n  useEffect(() => {\n    // Fetch restaurant details by ID from  API\n    fetch(`/restaurants/${id}`)\n      .then((response) => {\n        if (response.status === 404) {\n          throw new Error(\"Restaurant not found\");\n        }\n        return response.json();\n      })\n      .then((data) => setRestaurant(data)) // Use setRestaurant from context to update the data\n      .catch((error) => console.error(error));\n  }, [id]);\n\n  if (!selectedRestaurant) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      <h2>{selectedRestaurant.name}</h2>\n      <p>{selectedRestaurant.address}</p>\n      <h3>Pizzas</h3>\n      <ul>\n        {selectedRestaurant.pizzas.map((pizza) => (\n          <li key={pizza.id}>\n            {pizza.name} - {pizza.ingredients}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default RestaurantDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,YAAY,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM;IAAEO;EAAc,CAAC,GAAGN,YAAY,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM;IAAEO,UAAU,EAAEC;EAAmB,CAAC,GAAGR,YAAY,CAAC,CAAC;EAEzDF,SAAS,CAAC,MAAM;IACd;IACAW,KAAK,CAAE,gBAAeJ,EAAG,EAAC,CAAC,CACxBK,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAKT,aAAa,CAACS,IAAI,CAAC,CAAC,CAAC;IAAA,CACpCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACZ,EAAE,CAAC,CAAC;EAER,IAAI,CAACG,kBAAkB,EAAE;IACvB,oBAAON,OAAA;MAAAiB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,oBACErB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAKX,kBAAkB,CAACgB;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClCrB,OAAA;MAAAiB,QAAA,EAAIX,kBAAkB,CAACiB;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCrB,OAAA;MAAAiB,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACfrB,OAAA;MAAAiB,QAAA,EACGX,kBAAkB,CAACkB,MAAM,CAACC,GAAG,CAAEC,KAAK,iBACnC1B,OAAA;QAAAiB,QAAA,GACGS,KAAK,CAACJ,IAAI,EAAC,KAAG,EAACI,KAAK,CAACC,WAAW;MAAA,GAD1BD,KAAK,CAACvB,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACnB,EAAA,CApCQD,iBAAiB;EAAA,QACTJ,SAAS,EACEC,YAAY,EACKA,YAAY;AAAA;AAAA8B,EAAA,GAHhD3B,iBAAiB;AAsC1B,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}